{"version":3,"sources":["components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["ImageLinkForm","onInputChange","onButtonSubmit","className","type","onChange","onClick","FaceRecognition","imageUrl","box","id","src","alt","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesProps","particles","number","value","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","img","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","this","params","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sWAmBeA,EAhBO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eACtC,OACE,gCACE,mBAAGC,UAAU,KAAb,SACG,kHAEH,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,uBAAOA,UAAU,qBAAqBC,KAAK,OAAOC,SAAUJ,IAC5D,wBAAQE,UAAU,qDAAqDG,QAASJ,EAAhF,6BCEKK,G,OAXS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IACnC,OACE,qBAAKN,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKO,GAAG,aAAaC,IAAKH,EAAUI,IAAI,GAAGC,MAAM,QAAQC,OAAO,SAChE,qBAAKX,UAAU,eAAeY,MAAO,CAACC,IAAKP,EAAIQ,OAAQC,MAAOT,EAAIU,SAAUC,OAAQX,EAAIY,UAAWC,KAAMb,EAAIc,kBCD/GC,G,OAAM,IAAIC,IAASC,IAAI,CAC3BC,OAAQ,sCAGJC,EAAiB,CACrBC,UAAW,CACTC,OAAQ,CACNC,MAAO,GACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,QAyDLR,E,kDAlDb,aAAe,IAAD,8BACZ,gBAQFS,sBAAwB,SAACC,GACvB,IAAMC,EAAeD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aAC3DC,EAAMC,SAASC,eAAe,cAC9B/B,EAAQgC,OAAOH,EAAI7B,OACnBC,EAAS+B,OAAOH,EAAI5B,QAC1B,MAAO,CACLS,QAASc,EAAaS,SAAWjC,EACjCI,OAAQoB,EAAaU,QAAUjC,EAC/BK,SAAUN,EAASwB,EAAaW,UAAYnC,EAC5CQ,UAAWP,EAAUuB,EAAaY,WAAanC,IAlBrC,EAsBdoC,eAAiB,SAACzC,GAChB,EAAK0C,SAAS,CAAC1C,IAAKA,KAvBR,EA0BdR,cAAgB,SAACmD,GACf,EAAKD,SAAS,CAACE,MAAOD,EAAME,OAAOvB,SA3BvB,EA8Bd7B,eAAiB,WACf,EAAKiD,SAAS,CAAC3C,SAAU,EAAK+C,MAAMF,QACpC7B,EAAIgC,OAAOC,QAAQhC,IAASiC,kBAAmB,EAAKH,MAAMF,OACvDM,MAAK,SAAAC,GAAQ,OAAI,EAAKV,eAAe,EAAKf,sBAAsByB,OAChEC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAhC5B,EAAKP,MAAQ,CACXF,MAAO,GACP7C,SAAU,GACVC,IAAK,IALK,E,0CAqCd,WACE,MAA0BwD,KAAKV,MAAvB/C,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,IAClB,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YAAY+D,OAAQtC,IACzC,sDACA,cAAC,EAAD,CAAe3B,cAAegE,KAAKhE,cAAeC,eAAgB+D,KAAK/D,iBACvE,cAAC,EAAD,CAAiBO,IAAKA,EAAKD,SAAUA,W,GA7C3B2D,aCXHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,SAM1BwB,M","file":"static/js/main.a2764c70.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className='f3'>\r\n        {'This app will detect a face in your picture. Type in any image URL to see if the app can detect a face on it.'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='form center pa4 br3 shadow-5'>\r\n          <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n          <button className='w-30 grow f4 link ph3 pv2 dib white bg-transparent' onClick={onButtonSubmit}>Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputImage' src={imageUrl} alt='' width='500px' height='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'b332f6ceeaa3443fb18060b7d6cb77ff'\n})\n\nconst particlesProps = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const img = document.getElementById('inputImage');\n    const width = Number(img.width);\n    const height = Number(img.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { imageUrl, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={particlesProps} />\n        <h1>FACE RECOGNITION APP</h1>\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition box={box} imageUrl={imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}